//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PresentationTier.GroupServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GroupServiceReference.IGroupService")]
    public interface IGroupService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/CreateGroup", ReplyAction="http://tempuri.org/IGroupService/CreateGroupResponse")]
        void CreateGroup(string name, int profileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/CreateGroup", ReplyAction="http://tempuri.org/IGroupService/CreateGroupResponse")]
        System.Threading.Tasks.Task CreateGroupAsync(string name, int profileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/DeleteGroup", ReplyAction="http://tempuri.org/IGroupService/DeleteGroupResponse")]
        void DeleteGroup(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/DeleteGroup", ReplyAction="http://tempuri.org/IGroupService/DeleteGroupResponse")]
        System.Threading.Tasks.Task DeleteGroupAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/AddMember", ReplyAction="http://tempuri.org/IGroupService/AddMemberResponse")]
        void AddMember(int profileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/AddMember", ReplyAction="http://tempuri.org/IGroupService/AddMemberResponse")]
        System.Threading.Tasks.Task AddMemberAsync(int profileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/RemoveMember", ReplyAction="http://tempuri.org/IGroupService/RemoveMemberResponse")]
        void RemoveMember(int profileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/RemoveMember", ReplyAction="http://tempuri.org/IGroupService/RemoveMemberResponse")]
        System.Threading.Tasks.Task RemoveMemberAsync(int profileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetOnlineUsers", ReplyAction="http://tempuri.org/IGroupService/GetOnlineUsersResponse")]
        int[] GetOnlineUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetOnlineUsers", ReplyAction="http://tempuri.org/IGroupService/GetOnlineUsersResponse")]
        System.Threading.Tasks.Task<int[]> GetOnlineUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetAllUsers", ReplyAction="http://tempuri.org/IGroupService/GetAllUsersResponse")]
        int[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGroupService/GetAllUsers", ReplyAction="http://tempuri.org/IGroupService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<int[]> GetAllUsersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGroupServiceChannel : PresentationTier.GroupServiceReference.IGroupService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GroupServiceClient : System.ServiceModel.ClientBase<PresentationTier.GroupServiceReference.IGroupService>, PresentationTier.GroupServiceReference.IGroupService {
        
        public GroupServiceClient() {
        }
        
        public GroupServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GroupServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GroupServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GroupServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateGroup(string name, int profileId) {
            base.Channel.CreateGroup(name, profileId);
        }
        
        public System.Threading.Tasks.Task CreateGroupAsync(string name, int profileId) {
            return base.Channel.CreateGroupAsync(name, profileId);
        }
        
        public void DeleteGroup(string name) {
            base.Channel.DeleteGroup(name);
        }
        
        public System.Threading.Tasks.Task DeleteGroupAsync(string name) {
            return base.Channel.DeleteGroupAsync(name);
        }
        
        public void AddMember(int profileId) {
            base.Channel.AddMember(profileId);
        }
        
        public System.Threading.Tasks.Task AddMemberAsync(int profileId) {
            return base.Channel.AddMemberAsync(profileId);
        }
        
        public void RemoveMember(int profileId) {
            base.Channel.RemoveMember(profileId);
        }
        
        public System.Threading.Tasks.Task RemoveMemberAsync(int profileId) {
            return base.Channel.RemoveMemberAsync(profileId);
        }
        
        public int[] GetOnlineUsers() {
            return base.Channel.GetOnlineUsers();
        }
        
        public System.Threading.Tasks.Task<int[]> GetOnlineUsersAsync() {
            return base.Channel.GetOnlineUsersAsync();
        }
        
        public int[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<int[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
    }
}
