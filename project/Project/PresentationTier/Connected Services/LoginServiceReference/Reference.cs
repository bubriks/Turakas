//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PresentationTier.LoginServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Login", Namespace="http://schemas.datacontract.org/2004/07/DataTier")]
    [System.SerializableAttribute()]
    public partial class Login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LoginIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoginId {
            get {
                return this.LoginIdField;
            }
            set {
                if ((this.LoginIdField.Equals(value) != true)) {
                    this.LoginIdField = value;
                    this.RaisePropertyChanged("LoginId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginServiceReference.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CreateLogin", ReplyAction="http://tempuri.org/ILoginService/CreateLoginResponse")]
        int CreateLogin(PresentationTier.LoginServiceReference.Login login, string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/CreateLogin", ReplyAction="http://tempuri.org/ILoginService/CreateLoginResponse")]
        System.Threading.Tasks.Task<int> CreateLoginAsync(PresentationTier.LoginServiceReference.Login login, string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Authenticate", ReplyAction="http://tempuri.org/ILoginService/AuthenticateResponse")]
        int Authenticate(PresentationTier.LoginServiceReference.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/Authenticate", ReplyAction="http://tempuri.org/ILoginService/AuthenticateResponse")]
        System.Threading.Tasks.Task<int> AuthenticateAsync(PresentationTier.LoginServiceReference.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ForgotDetails", ReplyAction="http://tempuri.org/ILoginService/ForgotDetailsResponse")]
        bool ForgotDetails(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/ForgotDetails", ReplyAction="http://tempuri.org/ILoginService/ForgotDetailsResponse")]
        System.Threading.Tasks.Task<bool> ForgotDetailsAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/FindLogin", ReplyAction="http://tempuri.org/ILoginService/FindLoginResponse")]
        PresentationTier.LoginServiceReference.Login FindLogin(string what, int by);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/FindLogin", ReplyAction="http://tempuri.org/ILoginService/FindLoginResponse")]
        System.Threading.Tasks.Task<PresentationTier.LoginServiceReference.Login> FindLoginAsync(string what, int by);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UpdateLogin", ReplyAction="http://tempuri.org/ILoginService/UpdateLoginResponse")]
        bool UpdateLogin(int id, PresentationTier.LoginServiceReference.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UpdateLogin", ReplyAction="http://tempuri.org/ILoginService/UpdateLoginResponse")]
        System.Threading.Tasks.Task<bool> UpdateLoginAsync(int id, PresentationTier.LoginServiceReference.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/DeleteLogin", ReplyAction="http://tempuri.org/ILoginService/DeleteLoginResponse")]
        bool DeleteLogin(PresentationTier.LoginServiceReference.Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/DeleteLogin", ReplyAction="http://tempuri.org/ILoginService/DeleteLoginResponse")]
        System.Threading.Tasks.Task<bool> DeleteLoginAsync(PresentationTier.LoginServiceReference.Login login);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : PresentationTier.LoginServiceReference.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<PresentationTier.LoginServiceReference.ILoginService>, PresentationTier.LoginServiceReference.ILoginService {
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateLogin(PresentationTier.LoginServiceReference.Login login, string nickname) {
            return base.Channel.CreateLogin(login, nickname);
        }
        
        public System.Threading.Tasks.Task<int> CreateLoginAsync(PresentationTier.LoginServiceReference.Login login, string nickname) {
            return base.Channel.CreateLoginAsync(login, nickname);
        }
        
        public int Authenticate(PresentationTier.LoginServiceReference.Login login) {
            return base.Channel.Authenticate(login);
        }
        
        public System.Threading.Tasks.Task<int> AuthenticateAsync(PresentationTier.LoginServiceReference.Login login) {
            return base.Channel.AuthenticateAsync(login);
        }
        
        public bool ForgotDetails(string email) {
            return base.Channel.ForgotDetails(email);
        }
        
        public System.Threading.Tasks.Task<bool> ForgotDetailsAsync(string email) {
            return base.Channel.ForgotDetailsAsync(email);
        }
        
        public PresentationTier.LoginServiceReference.Login FindLogin(string what, int by) {
            return base.Channel.FindLogin(what, by);
        }
        
        public System.Threading.Tasks.Task<PresentationTier.LoginServiceReference.Login> FindLoginAsync(string what, int by) {
            return base.Channel.FindLoginAsync(what, by);
        }
        
        public bool UpdateLogin(int id, PresentationTier.LoginServiceReference.Login login) {
            return base.Channel.UpdateLogin(id, login);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateLoginAsync(int id, PresentationTier.LoginServiceReference.Login login) {
            return base.Channel.UpdateLoginAsync(id, login);
        }
        
        public bool DeleteLogin(PresentationTier.LoginServiceReference.Login login) {
            return base.Channel.DeleteLogin(login);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteLoginAsync(PresentationTier.LoginServiceReference.Login login) {
            return base.Channel.DeleteLoginAsync(login);
        }
    }
}
